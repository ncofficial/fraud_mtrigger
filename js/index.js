// Card.js plugin 
$('form').card({
  container: '.card-wrapper',
  width: 280,

  formSelectors: {
    nameInput: 'input[name="first-name"], input[name="last-name"]'
  }
})

// Fuction that allows lead array to any length with small meaning loses

function del_k(a, k) {
  if (k == 0) {
    k++
  }
  let j = 0
  let b = []
  while (j + 1 < a.length) {
    if (j % k == 0) {
      b = b.concat([(a[j] + a[j + 1]) / 2])
    } else {
      b = b.concat([a[j], a[j + 1]])
    }
    j += 2
  }
  return b
}

function add_k(a, k, n) {
  if (k == 0) {
    k++
  }
  while (a.length < n) {
    let b = []
    for (var j = 0; j < a.length; j++) {
      b = b.concat([a[j]])
      if (j % k == 0) {
        if (j != (a.length - 1)) {
          b = b.concat([(a[j] + a[j + 1]) / 2])
        } else {
          b = b.concat([(a[j] + a[j - 1]) / 2])
        }
      }
    }
    a = b
    k++
  }
  return a
}

function make_len_static_for_dataset(n, a) {
  while (a.length != n) {
    let l = a.length
    if (l >= 2 * n) {
      a = del_k(a, 2)
    } else {
      if (l < n) {
        let k = Math.floor(l / (n - l))
        a = add_k(a, k, n)
      } else {
        let k = Math.round((l / n) * 2)
        while (del_k(a, k).length < n) {
          k++
        }
        a = del_k(a, k)
      }
    }
  }
  return a
}

// Collecting mouse moves

var current_history = [
  [],
  []
]

function mouse_currentXY(e) {
  current_history[0] = (current_history[0]).concat([e.clientX / e.clientY])
  current_history[1] = (current_history[1]).concat([Date.now()])
}

$(document).ready(function() {
  $("body").attr("onmousemove", "mouse_currentXY(event)")

  // Mouse detect neural network
  const dataset_len = 150
  var Neuron = synaptic.Neuron,
    Layer = synaptic.Layer,
    Network = synaptic.Network,
    Trainer = synaptic.Trainer,
    Architect = synaptic.Architect
  var inputLayer = new Layer(dataset_len)
  var hiddenLayer = new Layer(6)
  var outputLayer = new Layer(1)

  inputLayer.project(hiddenLayer)
  hiddenLayer.project(outputLayer)

  var mouseTrigger = new Network({
    input: inputLayer,
    hidden: [hiddenLayer],
    output: outputLayer
  })

  // Loading dataset for network
  // Making datasets to static length
  var fraud_history_mouse = [19.466666666666665, 15.473684210526315, 9.090909090909092, 6.468085106382978, 5.254237288135593, 4.273972602739726, 3.6941176470588237, 3.3978494623655915, 3.1485148514851486, 2.9357798165137616, 2.8173913043478263, 2.6504065040650406, 2.519083969465649, 2.423357664233577, 2.402877697841727, 2.368794326241135, 2.368794326241135, 2.402877697841727, 2.3884892086330933, 2.423357664233577, 2.408759124087591, 2.394160583941606, 2.4296296296296296, 2.394160583941606, 2.4296296296296296, 2.394160583941606, 2.3597122302158273, 2.3404255319148937, 2.251655629139073, 2.1349693251533743, 2.0114285714285716, 1.9135135135135135, 1.893048128342246, 1.8534031413612566, 1.8534031413612566, 1.8429319371727748, 1.8534031413612566, 1.8429319371727748, 1.8031088082901554, 1.7777777777777777, 1.7754010695187166, 1.7945945945945947, 1.8435754189944134, 1.9289940828402368, 1.9401197604790419, 1.9884393063583814, 2.1164021164021163, 2.3448275862068964, 2.4651162790697674, 2.6153846153846154, 2.6995515695067263, 2.7533632286995515, 2.7623318385650224, 2.8251121076233185, 2.871111111111111, 2.881057268722467, 2.898678414096916, 2.9244444444444446, 2.9506726457399104, 2.97737556561086, 3.0604651162790697, 3.118483412322275, 3.148325358851675, 3.138755980861244, 3.1690821256038646, 3.180487804878049, 3.2019704433497536, 3.2338308457711444, 3.2238805970149254, 3.2562814070351758, 3.2893401015228427, 3.279187817258883, 3.279187817258883, 3.2462311557788945, 3.279187817258883, 3.269035532994924, 3.1758793969849246, 2.8792270531400965, 2.6790697674418604, 2.6697674418604653, 2.6451612903225805, 2.6359447004608296, 2.570135746606335, 2.5201793721973096, 2.488888888888889, 2.48, 2.458149779735683, 2.4192139737991267, 2.3605150214592276, 2.2953586497890295, 2.240663900414938, 2.2489626556016598, 2.3070539419087135, 2.4066390041493775, 2.4149377593360994, 2.3950617283950617, 2.299595141700405, 2.1897233201581026, 2.068441064638783, 1.992619926199262, 1.8736842105263158, 1.7049180327868851, 1.5045317220543806, 1.3147632311977715, 1.1688311688311688, 1.0663390663390664, 0.9976580796252927, 0.9354120267260579, 0.8984881209503239, 0.8710359408033826, 0.859538784067086, 0.8553459119496856, 0.8440748440748441, 0.8322981366459627, 0.8281573498964804, 0.8247422680412371, 0.8098159509202454, 0.7806841046277666, 0.7495069033530573, 0.7300970873786408, 0.7167630057803468, 0.7112810707456979, 0.7032136105860114, 0.6890130353817505, 0.686456400742115, 0.686456400742115, 0.6913123844731978, 0.6953271028037383, 0.710172744721689, 0.720616570327553, 0.7244701348747592, 0.7321772639691715, 0.7883495145631068, 0.8829174664107485, 1.0465549348230911, 1.2268602540834845, 1.409009009009009, 1.5098389982110911, 1.520572450805009, 1.533213644524237, 1.5423423423423424, 1.545945945945946, 1.5423423423423424, 1.5479204339963835, 1.5446265938069217, 1.534195933456562, 1.5103578154425612, 1.4817658349328215, 1.4605009633911368, 1.4584139264990328, 1.4545454545454546, 1.4506769825918762, 1.446808510638298, 1.4429400386847195, 1.4390715667311411, 1.3804971319311663, 1.3046728971962618, 1.270718232044199, 1.2660550458715596, 1.2541133455210238, 1.2072072072072073, 1.1580817051509769, 1.1181657848324515, 1.1005291005291005, 1.0966608084358525, 1.1001757469244289, 1.1040564373897708, 1.1403197158081706, 1.1907308377896613, 1.2164579606440071, 1.2128801431127012, 1.1942959001782532, 1.1142355008787346, 1.019197207678883, 0.9259896729776248, 0.8756388415672913, 0.836424957841484, 0.7953410981697171, 0.7545304777594728, 0.7177814029363785, 0.6936790923824959, 0.6763285024154589, 0.656, 0.6370839936608558, 0.6192733017377567, 0.6110236220472441, 0.6078740157480315, 0.6110236220472441, 0.6161137440758294, 0.6192733017377567, 0.6347687400318979, 0.6484751203852327, 0.651685393258427, 0.6548956661316212, 0.6688, 0.7449139280125195, 0.8122137404580153, 0.8381240544629349, 0.8411497730711044, 0.8502269288956127, 0.8679817905918058, 0.8861911987860395, 0.8983308042488619, 0.9044006069802731, 0.9101978691019786, 0.91324200913242, 0.9162861491628614, 0.9193302891933028, 0.9282442748091603, 0.9341500765696784, 0.9431643625192012, 0.9522342064714946, 0.9553158705701078, 0.9582689335394127, 0.9643410852713178, 0.973561430793157, 0.9797191887675507, 0.9921507064364207, 0.9952904238618524, 0.9890453834115805, 0.9827315541601256, 0.9764521193092621, 0.9733124018838305, 0.967032967032967, 0.9383886255924171, 0.9184, 0.9017713365539453, 0.8878048780487805, 0.8641571194762684, 0.8303130148270181, 0.7979966611018364, 0.7757166947723441, 0.7707979626485568, 0.7734241908006815, 0.7707979626485568, 0.7741935483870968, 0.7775891341256367, 0.7749576988155669, 0.7783417935702199, 0.7824620573355818, 0.7913188647746243, 0.8111658456486043, 0.820097244732577, 0.8244766505636071, 0.8288, 0.8298887122416534, 0.831496062992126, 0.834108527131783, 0.833587786259542, 0.8275862068965517, 0.8291233283803864, 0.8296296296296296, 0.833578792341679, 0.8321167883211679, 0.8326055312954876, 0.8355167394468704]
  fraud_history = make_len_static_for_dataset(dataset_len, fraud_history_mouse)
  var holder_history_mouse = [4.205882352941177, 3.558139534883721, 3.25, 3.204081632653061, 3.2244897959183674, 3.2448979591836733, 3.2653061224489797, 3.2857142857142856, 3.22, 3.24, 3.26, 3.150943396226415, 3.1272727272727274, 3.0701754385964914, 3.0344827586206895, 3.0517241379310347, 3.016949152542373, 2.9833333333333334, 2.9508196721311477, 2.9672131147540983, 2.9193548387096775, 2.9193548387096775, 2.9508196721311477, 2.9344262295081966, 2.9, 2.85, 2.8333333333333335, 2.721311475409836, 2.7457627118644066, 2.76271186440678, 2.7457627118644066, 2.793103448275862, 2.810344827586207, 3.3333333333333335, 4.775, 6.838709677419355, 7.193548387096774, 7.225806451612903, 7.466666666666667, 7.433333333333334, 7.4, 6.875, 5.097560975609756, 3.456140350877193, 2.6805555555555554, 2.4, 2.3132530120481927, 2.325301204819277, 2.2976190476190474, 2.3095238095238093, 2.3214285714285716, 2.3058823529411763, 2.2906976744186047, 2.258426966292135, 2.241758241758242, 2.204301075268817, 2.204301075268817, 2.21505376344086, 2.225806451612903, 2.2857142857142856, 2.4431818181818183, 2.4545454545454546, 2.477272727272727, 2.4886363636363638, 2.5, 2.6551724137931036, 2.7865168539325844, 2.9239130434782608, 3.03125, 3.1530612244897958, 3.282828282828283, 3.36734693877551, 3.377551020408163, 3.3877551020408165, 3.3979591836734695, 3.4183673469387754, 3.4489795918367347, 3.4591836734693877, 3.4591836734693877, 3.4948453608247423, 3.5208333333333335, 3.5104166666666665, 4.136986301369863, 4.344262295081967, 3.9516129032258065, 3.746268656716418, 3.1744186046511627, 2.761467889908257, 2.074626865671642, 2.088, 2.0854700854700856, 2.1009174311926606, 2.0849056603773586, 2.085714285714286, 2.0761904761904764, 2.056603773584906, 1.9026548672566372, 1.7899159663865547, 1.7295081967213115, 1.7073170731707317, 1.6935483870967742, 1.68, 1.68, 1.68, 1.6666666666666667, 1.7063492063492063, 1.7142857142857142, 1.728, 1.7398373983739837, 1.7321428571428572, 1.5333333333333334, 0.7112970711297071, 0.7874015748031497, 0.8212927756653993, 0.8308270676691729, 0.8314606741573034, 0.8296296296296296, 0.8308823529411765, 0.8272058823529411, 0.8302583025830258, 0.8296296296296296, 0.8333333333333334, 0.837037037037037, 0.8444444444444444, 0.8736059479553904, 0.9398496240601504, 0.9848484848484849, 1.0190114068441065, 1.0727969348659003, 1.1307692307692307, 1.16988416988417, 1.1737451737451738, 1.1737451737451738, 1.16988416988417, 1.166023166023166, 1.1136363636363635, 1.011111111111111, 0.9021739130434783, 0.8014184397163121, 0.7132867132867133, 0.65625, 0.6366782006920415, 0.6366782006920415, 0.6401384083044983, 0.7464285714285714, 0.7904411764705882, 0.8022388059701493, 0.8113207547169812, 0.8122605363984674, 0.7961538461538461, 0.7992277992277992, 0.8255813953488372, 0.875968992248062, 0.9885057471264368, 1.1094890510948905, 1.156794425087108, 1.178082191780822, 1.1774744027303754, 1.162162162162162, 1.118811881188119, 1.0512820512820513, 0.9750778816199377, 0.9021406727828746, 0.8459214501510574, 0.8192771084337349, 0.8162650602409639, 0.8132530120481928, 0.8126888217522659, 0.8090909090909091, 0.8024316109422492, 0.7987804878048781, 0.7981651376146789, 0.7938461538461539, 0.7857142857142857, 0.7774294670846394, 0.7735849056603774, 0.7704402515723271, 0.7728706624605678, 0.7697160883280757, 0.7728706624605678, 0.7760252365930599, 0.7981072555205048, 0.8557993730407524, 0.922360248447205, 0.9691358024691358, 0.9846153846153847, 0.9815384615384616, 0.9845201238390093, 0.9905956112852664, 1.0031746031746032, 1.012779552715655, 1.0095541401273886, 1.0063492063492063, 0.9843260188087775, 0.9720496894409938, 0.9690402476780186, 0.9660493827160493, 0.9629629629629629, 0.9570552147239264, 0.9512195121951219, 0.9513677811550152, 0.9515151515151515, 0.9486404833836858, 0.948948948948949, 0.9491017964071856, 0.9434523809523809, 0.9406528189910979]
  holder_history_mouse = make_len_static_for_dataset(dataset_len, holder_history_mouse)
  // Training network
  var learningRate = .3
  for (var i = 0; i < 100; i++) {
    // fraud => 1, !fraud => 0
    mouseTrigger.activate(fraud_history_mouse)
    mouseTrigger.propagate(learningRate, [1])
    mouseTrigger.activate(holder_history_mouse)
    mouseTrigger.propagate(learningRate, [0])
  }


  // Testing network
  //console.log(mouseTrigger.activate(fraud_history_mouse)) // must be [1]
  //console.log(mouseTrigger.activate(holder_history_mouse)) // must be [0]

  /* Main trigger script */


  /* Call main script */

  $("#input-button").click(function() {
    //making current history to static length
    current_history[0] = make_len_static_for_dataset(dataset_len, current_history[0])
    //check by neural network history of mousechanges
    let fscore = mouseTrigger.activate(current_history[0])
    //check for count of mousemoves and adding fraud-score
    if ($(current_history[0]).size() != 0) {
      $($(".body-text")[0]).text("Good human.\nFraud-score: " + fscore)
    } else {
      $($(".body-text")[0]).text("Bad robot.\nFraud-score: " + fscore)
    }
  })
})